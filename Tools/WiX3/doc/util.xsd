<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:html="http://www.w3.org/1999/xhtml"
            xmlns:wix="http://schemas.microsoft.com/wix/2006/wi"
             xmlns:xs="http://www.w3.org/2001/XMLSchema"
            xmlns:xse="http://schemas.microsoft.com/wix/2005/XmlSchemaExtension"
      targetNamespace="http://schemas.microsoft.com/wix/UtilExtension"
                xmlns="http://schemas.microsoft.com/wix/UtilExtension">
    <xs:annotation>
        <xs:documentation>
            Copyright (c) Microsoft Corporation.  All rights reserved.
            
            The use and distribution terms for this software are covered by the
            Common Public License 1.0 (http://opensource.org/licenses/cpl.php)
            which can be found in the file CPL.TXT at the root of this distribution.
            By using this software in any fashion, you are agreeing to be bound by
            the terms of this license.
            
            You must not remove this notice, or any other, from this software.

            The source code schema for the Windows Installer XML Toolset Utility Extension.
        </xs:documentation>
    </xs:annotation>

    <xs:import namespace="http://schemas.microsoft.com/wix/2006/wi" />

    <xs:element name="CloseApplication">
        <xs:annotation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Product" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Module" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Fragment" />
            </xs:appinfo>
            <xs:documentation>Closes applications or schedules a reboot if application cannot be closed.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Condition that determines if the application should be closed.  Must be blank or evaluate to true
                            for the application to be scheduled for closing.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="Id" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>Identifier for the close application (primary key).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Target" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>Name of the exectuable to be closed.  This should only be file name.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Description" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Description to show if application is running and needs to be closed.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Sequence" type="xs:integer">
                        <xs:annotation>
                            <xs:documentation>Optionally orders the applications to be closed.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="EventSource">
        <xs:annotation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Component" />
            </xs:appinfo>
            <xs:documentation>Creates an event source.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="CategoryCount" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>
                        The number of categories in CategoryMessageFile. CategoryMessageFile
                        must be specified too.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="CategoryMessageFile" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Name of the category message file. CategoryCount must be specified too.
                        Note that this is a formatted field, so you can use [#fileId] syntax to
                        refer to a file being installed. It is also written as a REG_EXPAND_SZ
                        string, so you can use %environment_variable% syntax to refer to a file
                        already present on the user's machine.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="EventMessageFile" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>
                        Name of the event message file.
                        Note that this is a formatted field, so you can use [#fileId] syntax to
                        refer to a file being installed. It is also written as a REG_EXPAND_SZ
                        string, so you can use %environment_variable% syntax to refer to a file
                        already present on the user's machine.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Log" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Name of the event source's log.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Name" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Name of the event source.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ParameterMessageFile" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Name of the parameter message file.
                        Note that this is a formatted field, so you can use [#fileId] syntax to
                        refer to a file being installed. It is also written as a REG_EXPAND_SZ
                        string, so you can use %environment_variable% syntax to refer to a file
                        already present on the user's machine.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="SupportsErrors" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>
                        Equivalent to EVENTLOG_ERROR_TYPE.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="SupportsFailureAudits" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>
                        Equivalent to EVENTLOG_AUDIT_FAILURE.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="SupportsInformationals" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>
                        Equivalent to EVENTLOG_INFORMATION_TYPE.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="SupportsSuccessAudits" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>
                        Equivalent to EVENTLOG_AUDIT_SUCCESS.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="SupportsWarnings" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>
                        Equivalent to EVENTLOG_WARNING_TYPE.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileShare">
        <xs:annotation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Component" />
            </xs:appinfo>
            <xs:documentation>Creates a file share out of the component's directory.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSharePermission" minOccurs="1" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>ACL permission</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="Id" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Identifier for the file share (primary key).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Name" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Name of the file share.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Description of the file share.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileSharePermission">
        <xs:annotation>
            <xs:documentation>
                Sets ACLs on a FileShare.  This element has no Id attribute.
                The table and key are taken from the parent element.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="User" use="required" type="xs:string">
            </xs:attribute>
            <!-- Common ACLs -->
            <xs:attribute name="Read" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Delete" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ReadPermission" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ChangePermission" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="TakeOwnership" type="YesNoType">
            </xs:attribute>
            <!-- Folder and File ACLs -->
            <xs:attribute name="ReadAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="WriteAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ReadExtendedAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="WriteExtendedAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Synchronize" type="YesNoType">
            </xs:attribute>
            <!-- Folder only ACLs -->
            <xs:attribute name="CreateFile" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to create a file in the directory.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="CreateChild" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to create a subdirectory.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="DeleteChild" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to delete a directory and all the files it contains, including read-only files.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Traverse" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to traverse the directory.  By default, users are assigned the BYPASS_TRAVERSE_CHECKING privilege, which ignores the FILE_TRAVERSE access right.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <!-- Generic ACLs, mapped by system to appropriate permissions -->
            <xs:attribute name="GenericAll" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericExecute" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericWrite" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericRead" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>specifying this will fail to grant read access</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="Group">
        <xs:annotation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Fragment" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Module" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Product" />
            </xs:appinfo>
            <xs:documentation>Group for all kinds of things</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Id" type="xs:string" use="required"/>
            <xs:attribute name="Name" type="xs:string" use="required"/>
            <xs:attribute name="Domain" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="GroupRef">
        <xs:annotation>
            <xs:documentation>Used to join a user to a group</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Id" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="PerfCounter">
        <xs:annotation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="File" />
            </xs:appinfo>
            <xs:documentation>Used to install Perfmon counters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Name" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="PermissionEx">
        <xs:annotation>
            <xs:documentation>
                Sets ACLs on File, Registry, CreateFolder, or ServiceInstall.  When under a Registry element, this cannot be used
                if the Action attribute's value is remove or removeKeyOnInstall.  This element has no Id attribute.
                The table and key are taken from the parent element.
            </xs:documentation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="CreateFolder" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="File" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Registry" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="RegistryKey" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="RegistryValue" />
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Domain" type="xs:string">
            </xs:attribute>
            <xs:attribute name="User" use="required" type="xs:string">
            </xs:attribute>
            <!-- Common ACLs -->
            <xs:attribute name="Read" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Delete" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ReadPermission" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ChangePermission" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="TakeOwnership" type="YesNoType">
            </xs:attribute>
            <!-- Folder and File ACLs -->
            <xs:attribute name="ReadAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="WriteAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="ReadExtendedAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="WriteExtendedAttributes" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Synchronize" type="YesNoType">
            </xs:attribute>
            <!-- Folder only ACLs -->
            <xs:attribute name="CreateFile" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to create a file in the directory.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="CreateChild" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to create a subdirectory.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="DeleteChild" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to delete a directory and all the files it contains, including read-only files.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Traverse" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>For a directory, the right to traverse the directory.  By default, users are assigned the BYPASS_TRAVERSE_CHECKING privilege, which ignores the FILE_TRAVERSE access right.  Only valid under a 'CreateFolder' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <!-- File only ACLs -->
            <xs:attribute name="Append" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Execute" type="YesNoType">
            </xs:attribute>
            <!-- File and Registry ACLs -->
            <xs:attribute name="Write" type="YesNoType">
            </xs:attribute>
            <!-- Registry only ACLs -->
            <xs:attribute name="CreateSubkeys" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="EnumerateSubkeys" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="Notify" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="CreateLink" type="YesNoType">
            </xs:attribute>
            <!-- Generic ACLs, mapped by system to appropriate permissions -->
            <xs:attribute name="GenericAll" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericExecute" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericWrite" type="YesNoType">
            </xs:attribute>
            <xs:attribute name="GenericRead" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>specifying this will fail to grant read access</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <!-- Service only ACLs -->
            <xs:attribute name="ServiceQueryConfig" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the QueryServiceConfig and QueryServiceConfig2 functions to query the service configuration.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceChangeConfig" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the ChangeServiceConfig or ChangeServiceConfig2 function to change the service configuration.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceQueryStatus" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the QueryServiceStatus function to ask the service control manager about the status of the service.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceEnumerateDependents" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the EnumDependentServices function to enumerate all the services dependent on the service.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceStart" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the StartService function to start the service.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceStop" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the ControlService function to stop the service.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServicePauseContinue" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the ControlService function to pause or continue the service.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceInterrogate" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the ControlService function to ask the service to report its status immediately.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceUserDefinedControl" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Required to call the ControlService function to specify a user-defined control code.  Only valid under a 'ServiceInstall' parent.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="ServiceConfig">
        <xs:annotation>
            <xs:documentation>Service configuration information for failure actions.</xs:documentation>
            <xs:appinfo>
                <xse:remarks>
                    <html:dl>
                        <html:dd>Nesting a ServiceConfig element under a ServiceInstall element will result in the service being installed to be configured.</html:dd>
                        <html:dd>Nesting a ServiceConfig element under a component element will result in an already installed service to be configured.  If the service does not exist prior to the install of the MSI package, the install will fail.</html:dd>
                    </html:dl>
                </xse:remarks>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="ServiceName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Required if not under a ServiceInstall element.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="FirstFailureActionType" use="required">
                <xs:annotation>
                    <xs:documentation>Action to take on the first failure of the service.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="none"/>
                        <xs:enumeration value="reboot"/>
                        <xs:enumeration value="restart"/>
                        <xs:enumeration value="runCommand"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="SecondFailureActionType" use="required">
                <xs:annotation>
                    <xs:documentation>Action to take on the second failure of the service.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="none"/>
                        <xs:enumeration value="reboot"/>
                        <xs:enumeration value="restart"/>
                        <xs:enumeration value="runCommand"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ThirdFailureActionType" use="required">
                <xs:annotation>
                    <xs:documentation>Action to take on the third failure of the service.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="none"/>
                        <xs:enumeration value="reboot"/>
                        <xs:enumeration value="restart"/>
                        <xs:enumeration value="runCommand"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ResetPeriodInDays" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Number of days after which to reset the failure count to zero if there are no failures.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="RestartServiceDelayInSeconds" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>If any of the three *ActionType attributes is "restart", this specifies the number of seconds to wait before doing so.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ProgramCommandLine" type="xs:string">
                <xs:annotation>
                    <xs:documentation>If any of the three *ActionType attributes is "runCommand", this specifies the command to run when doing so.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="RebootMessage" type="xs:string">
                <xs:annotation>
                    <xs:documentation>If any of the three *ActionType attributes is "reboot", this specifies the message to broadcast to server users before doing so.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="User">
        <xs:annotation>
            <xs:documentation>User for all kinds of things.  When it is not nested under a component it is included in the MSI so it can be referenced by other elements such as the User attribute in the AppPool element.  When it is nested under a Component element, the User will be created on install and can also be used for reference.</xs:documentation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Component" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Fragment" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Module" />
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Product" />
                <xse:seeAlso ref="Group"/>
                <xse:seeAlso ref="GroupRef"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="GroupRef" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Id" type="xs:string" use="required"/>
            <xs:attribute name="Name" use="required" type="xs:string">
            </xs:attribute>
            <xs:attribute name="Domain" type="xs:string">
            </xs:attribute>
            <xs:attribute name="Password" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Usually a Property that is passed in on the command-line to keep it more secure.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="PasswordNeverExpires" type="YesNoType"/>
            <xs:attribute name="CanNotChangePassword" type="YesNoType"/>
            <xs:attribute name="RemoveOnUninstall" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Indicates whether the user account should be left behind on uninstall.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="FailIfExists" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Indicates if the install should fail if the user already exists.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="UpdateIfExists" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Indicates if the user account properties should be updated if the user already exists.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name ="PasswordExpired" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Indicates whether the user must change their password on their first login.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Disabled" type="YesNoType"/>
            <xs:attribute name="CreateUser" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Indicates whether or not to create the user.  User creation can be skipped if all that is desired is to join a user to groups.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="XmlFile">
        <xs:annotation>
            <xs:documentation>
                Adds or removes .xml file entries.  If you use the XmlFile element you must link with wixca.wixlib because it requires the XmlFile custom actions.
            </xs:documentation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Component" />
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Id" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Identifier for xml file modification.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ElementPath" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The XPath of the element to be modified.  Note that this is a formatted field and therefore, square brackets in the XPath must be escapted.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="File" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Path of the .xml file to configure.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of XML node to set/add to the specified element.  Not setting this attribute causes the element's text value to be set.  Otherwise this specified the attribute name that is set.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The value to be written.  See the <html:a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/formatted.asp?frame=true&amp;hidetoc=true">Formatted topic</html:a> for information how to escape square brackets in the value.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Action" use="required">
                <xs:annotation>
                    <xs:documentation>The type of modification to be made to the XML file when the component is installed.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="createElement">
                            <xs:annotation>
                                <xs:documentation>Creates a new element under the element specified in ElementPath.  The Name attribute is required in this case and specifies the name of the new element.  The Value attribute is not necessary when createElement is specified as the action.  If the Value attribute is set, it will cause the new element's text value to be set.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="deleteValue">
                            <xs:annotation>
                                <xs:documentation>Deletes a value from the element specified in the ElementPath.  If Name is specified, the attribute with that name is deleted.  If Name is not specified, the text value of the element specified in the ElementPath is deleted.  The Value attribute is ignored if deleteValue is the action specified.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="setValue">
                            <xs:annotation>
                                <xs:documentation>Sets a value in the element specified in the ElementPath.  If Name is specified, and attribute with that name is set to the value specified in Value.  If Name is not specified, the text value of the element is set.  Value is a required attribute if setValue is the action specified.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Permanent" type="YesNoType">
                <xs:annotation>
                    <xs:documentation>Specifies whether or not the modification should be removed on uninstall.  This has no effect on uninstall if the action was deleteValue.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Sequence" use="optional" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Specifies the order in which the modification is to be attempted on the XML file.  It is important to ensure that new elements are created before you attempt to add an attribute to them.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="XmlConfig">
        <xs:annotation>
            <xs:documentation>
                Adds or removes .xml file entries.  If you use the XmlConfig element you must link with wixca.wixlib because it requires the XmlConfig custom actions.
            </xs:documentation>
            <xs:appinfo>
                <xse:parent namespace="http://schemas.microsoft.com/wix/2006/wi" ref="Component" />
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="XmlConfig" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Id" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Identifier for xml file modification.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Action">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="create" />
                        <xs:enumeration value="delete" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ElementPath" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The XPath of the element to be modified.  Note that this is a formatted field and therefore, square brackets in the XPath must be escapted.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="File" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Path of the .xml file to configure.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of XML node to set/add to the specified element.  Not setting this attribute causes the element's text value to be set.  Otherwise this specified the attribute name that is set.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Node">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="element" />
                        <xs:enumeration value="value" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="On">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="install" />
                        <xs:enumeration value="uninstall" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Sequence" use="optional" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Specifies the order in which the modification is to be attempted on the XML file.  It is important to ensure that new elements are created before you attempt to add an attribute to them.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The value to be written.  See the <html:a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/formatted.asp?frame=true&amp;hidetoc=true">Formatted topic</html:a> for information how to escape square brackets in the value.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="VerifyPath" type="xs:string" />
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="YesNoType">
        <xs:annotation>
            <xs:documentation>Values of this type will either be "yes" or "no".</xs:documentation>
        </xs:annotation>
        <xs:restriction base='xs:NMTOKEN'>
            <xs:enumeration value="no"/>
            <xs:enumeration value="yes"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
